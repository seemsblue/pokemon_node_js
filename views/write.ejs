<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quill Editor</title>
    <!-- Quill CSS -->
    <link href="//cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link href="/css/main.css" rel="stylesheet">
    <link href="/bootstrap/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <%- include('nav.ejs')%>

    <div class="mx-auto mt-3" style="width: 95%;">
        <form action="/write" method="POST" class="mt-1">
            <select name="category" class="form-select mt-2" aria-label="Default select example" style="width: 300px;">
                <option value="general">자유게시판</option>
                <option value="q">질문게시판</option>
                <option value="announcement">공지사항</option>
            </select>
            <div class="input-group mb-3 mt-1">
                <span class="input-group-text">제목</span>
                <input name="title" type="text" class="form-control" aria-label="Amount (to the nearest dollar)">
              </div>
            <div id="editor-container" class="mt-1"></div>
            <input type="hidden" name="editorContent" id="editorContent">
            <button type="submit" class="btn btn-success mt-3">작성</button>
        </form>
    </div>
    <!-- Quill JS -->
    <script src="//cdn.quilljs.com/1.3.6/quill.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var quill = new Quill('#editor-container', {
                theme: 'snow',  //스노우 테마는 기본 테마 중 하나인데 밑에 설정 안하면 기본 툴바랑 옵션 딸려감
                modules: {
                    toolbar: {  //모듈 중 툴바에 관한 설정 여기서 가능
                        container: [
                            [{ 'header': [1, 2, false] }],  // 헤더 옵션: h1, h2, 기본 텍스트
                            ['bold', 'italic', 'underline'],
                            [{ 'color': [] }, { 'background': [] }],
                            [{ 'align': [] }],
                            ['image', 'code-block']
                        ],
                        handlers: {
                            image: imageHandler // 이미지 버튼 클릭 시 실행되는 핸들러
                        }
                    }
                }
            });

            function countImages() {    //이미지 몇개임?
                return quill.getContents().ops.filter(op => op.insert && op.insert.image).length;
            }

            function imageHandler() {
                if (countImages() >= 2) { // 이미 추가된 이미지 개수가 2개 이상인지 확인
                    alert('이미지는 최대 2개까지 추가할 수 있습니다.'); // 2개 이상이면 경고 메시지
                    return; // 이미지 추가 중단
                }
        
                var input = document.createElement('input'); // 파일 선택 입력 요소 생성
                input.setAttribute('type', 'file'); // 입력 유형을 파일로 설정
                input.setAttribute('accept', 'image/*'); // 이미지 파일만 선택 가능하도록 설정
                input.click(); // 파일 선택 창 열기
        
                input.onchange = function() { // 파일 선택 후 이벤트 핸들러
                    var file = input.files[0]; // 선택한 파일 가져오기
                    if (file) {
                        // 이미지 파일 크기 검사 (4MB 이하)
                        if (file.size > 3 * 1024 * 1024) {
                            alert('이미지 파일 크기는 3MB 이하만 가능합니다.'); // 크기가 3MB 초과 시 경고 메시지
                            return; // 이미지 추가 중단
                        }
        
                        var img = new Image(); // 이미지 객체 생성
                        img.src = URL.createObjectURL(file); // 선택한 파일의 URL 설정
                        img.onload = function() { // 이미지 로드 후 이벤트 핸들러
                            // 이미지 해상도 검사 (2000x2000 이하)
                            if (img.width > 2000 || img.height > 2000) {
                                alert('이미지 해상도는 2000x2000 이하만 가능합니다.'); // 해상도가 2000x2000 초과 시 경고 메시지
                                return; // 이미지 추가 중단
                            }
        
                            var formData = new FormData(); // 폼 데이터 객체 생성
                            formData.append('image', file); // 폼 데이터에 이미지 파일 추가
        
                            // 서버에 이미지 업로드
                            fetch('/upload-image', {
                                method: 'POST',
                                body: formData // 폼 데이터 전송
                            })
                            .then(response => response.json()) // 서버 응답을 JSON으로 변환
                            .then(data => {
                                var range = quill.getSelection(); // 에디터의 현재 선택 범위 가져오기
                                quill.insertEmbed(range.index, 'image', data.url); // 에디터에 이미지 삽입
                                console.log(data.url)
                            })
                            .catch(error => {
                                console.error('Error:', error); // 오류 발생 시 콘솔에 출력
                            });
                        };
                    }
                };
            }

            // 폼 제출 시 내용을 숨겨진 input에 저장
            document.querySelector('form').addEventListener('submit', function() {
                var editorContent = document.querySelector('input[name=editorContent]');
                editorContent.value = quill.root.innerHTML;
            });
        });
    </script>
    <!-- Quill JS 끝 -->

    <script src="/bootstrap/bootstrap.bundle.min.js"></script>
</body>
</html>